<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Flynn" failures="0" tests="9" name="FireFoxBrowserTest" time="84.147" errors="0" timestamp="2023-02-08T17:14:13 IST">
  <testcase classname="TestNg.TestNgClass2" name="@BeforeClass defaultDriver" time="0.06">
    <failure type="org.openqa.selenium.WebDriverException" message="Failed to decode response from marionette
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;FLYNN&amp;apos;, ip: &amp;apos;192.168.1.7&amp;apos;, os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.5&amp;apos;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 109.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20230127170202, moz:geckodriverVersion: 0.32.1, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 19344, moz:profile: C:\Users\siddr\AppData\Loca..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: ffffcb5e-1221-4eb3-9545-57bd101313d7">
      <![CDATA[org.openqa.selenium.WebDriverException: Failed to decode response from marionette
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'FLYNN', ip: '192.168.1.7', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 109.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20230127170202, moz:geckodriverVersion: 0.32.1, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 19344, moz:profile: C:\Users\siddr\AppData\Loca..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: ffffcb5e-1221-4eb3-9545-57bd101313d7
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277)
at TestNg.TestNgClass2.defaultDriver(TestNgClass2.java:70)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass defaultDriver -->
  <testcase classname="TestNg.TestNgClass2" name="@BeforeMethod beforeMethod" time="-1.675856653892E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestNg.TestNgClass2" name="@AfterMethod afterMethod" time="-1.675856653893E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestNg.TestNgClass2" name="@BeforeMethod beforeMethod" time="-1.675856653893E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestNg.TestNgClass2" name="@AfterMethod afterMethod" time="-1.675856653895E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestNg.TestNgClass2" name="@BeforeMethod beforeMethod" time="-1.675856653896E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestNg.TestNgClass2" name="@AfterMethod afterMethod" time="-1.675856653897E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestNg.TestNgClass2" name="@AfterClass afterclass" time="-1.675856653898E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterclass -->
  <testcase classname="TestNg.TestNgClass1" name="Test1" time="12.089"/>
  <testcase classname="TestNg.TestNgClass1" name="Test2" time="10.03"/>
  <testcase classname="TestNg.TestNgClass1" name="Test3" time="10.024"/>
  <testcase classname="TestNg.TestNgClass1" name="Test4" time="10.028"/>
  <testcase classname="TestNg.TestNgClass1" name="Test5" time="10.009"/>
  <testcase classname="TestNg.TestNgClass1" name="Test6" time="10.02"/>
  <testcase classname="TestNg.TestNgClass2" name="Test3" time="0.0">
    <skipped/>
  </testcase> <!-- Test3 -->
  <testcase classname="TestNg.TestNgClass2" name="Test4" time="0.0">
    <skipped/>
  </testcase> <!-- Test4 -->
  <testcase classname="TestNg.TestNgClass2" name="Test5" time="0.0">
    <skipped/>
  </testcase> <!-- Test5 -->
</testsuite> <!-- FireFoxBrowserTest -->
